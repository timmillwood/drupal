<?php

/**
 * @file
 * Contains install/update hooks for moderation_state.
 */

use Drupal\Core\Entity\ContentEntityTypeInterface;

/**
 * Implements hook_install().
 */
function content_moderation_install() {
  /** @var \Drupal\content_moderation\ModerationInformationInterface $moderation_info */
  $moderation_info = \Drupal::service('content_moderation.moderation_information');

  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $field_manager */
  $field_manager = \Drupal::service('entity_field.manager');

  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  $revisionable_entity_definitions = $moderation_info->selectRevisionableEntities((\Drupal::entityTypeManager()->getDefinitions()));

  // An intermittent issue remains where calling
  // ModerationInformation:selectRevisionableEntities in hook_install
  // returns a different result than calling it in hook_entity_type_alter.
  // The result is that the moderation_state field is null, and thus trying to
  // install a field with a null definition explodes (rightly so).
  // Until that oddity is sorted out, we can at least put an extra check in
  // here to filter out such broken entities.
  // @todo Remove when the underlying bug is fixed.
  // @see https://www.drupal.org/node/2674446
  $revisionable_entity_definitions = array_filter($revisionable_entity_definitions, function(ContentEntityTypeInterface $type) use ($field_manager) {
    return !empty($field_manager->getFieldStorageDefinitions($type->id())['moderation_state']);
  });

  /** @var \Drupal\Core\Entity\ContentEntityTypeInterface $type */
  foreach ($revisionable_entity_definitions as $type) {
    $content_moderation_definition = $field_manager->getFieldStorageDefinitions($type->id())['moderation_state'];
    $entity_definition_update_manager->installFieldStorageDefinition('moderation_state', $type->id(), 'moderation_state', $content_moderation_definition);
  }
}
